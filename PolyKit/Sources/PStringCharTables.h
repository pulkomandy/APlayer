/******************************************************************************/
/* PString character tables header file.                                      */
/******************************************************************************/
/* This source, or parts thereof, may be used in any software as long the     */
/* license of PolyKit is keep. See the LICENSE file for more information.     */
/*                                                                            */
/* Copyright (C) 1998-2002 by Polycode.                                       */
/* All rights reserved.                                                       */
/******************************************************************************/


#ifndef __PStringCharTable_h
#define __PStringCharTable_h

// PolyKit headers
#include "POS.h"


/******************************************************************************/
/*                                                                            */
/* The tables below holds all the flag values for each unicode character      */
/*                                                                            */
/******************************************************************************/
#define UNIFLG_ASCII		0x01
#define UNIFLG_CONTROL		0x02
#define UNIFLG_DIGIT		0x04
#define UNIFLG_WHITESPACE	0x08
#define UNIFLG_LOWERCASE	0x10
#define UNIFLG_UPPERCASE	0x20



/******************************************************************************/
/* High-byte 0x00 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte00[256] =
{
	// 0x0000 - 0x000f
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL | UNIFLG_WHITESPACE,
	UNIFLG_ASCII | UNIFLG_CONTROL | UNIFLG_WHITESPACE,
	UNIFLG_ASCII | UNIFLG_CONTROL | UNIFLG_WHITESPACE,
	UNIFLG_ASCII | UNIFLG_CONTROL | UNIFLG_WHITESPACE,
	UNIFLG_ASCII | UNIFLG_CONTROL | UNIFLG_WHITESPACE,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,

	// 0x0010 - 0x001f
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,
	UNIFLG_ASCII | UNIFLG_CONTROL, UNIFLG_ASCII | UNIFLG_CONTROL,

	// 0x0020 - 0x002f
	UNIFLG_ASCII | UNIFLG_WHITESPACE, UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII,
	UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII,
	UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII,
	UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII,

	// 0x0030 - 0x003f
	UNIFLG_ASCII | UNIFLG_DIGIT, UNIFLG_ASCII | UNIFLG_DIGIT,
	UNIFLG_ASCII | UNIFLG_DIGIT, UNIFLG_ASCII | UNIFLG_DIGIT,
	UNIFLG_ASCII | UNIFLG_DIGIT, UNIFLG_ASCII | UNIFLG_DIGIT,
	UNIFLG_ASCII | UNIFLG_DIGIT, UNIFLG_ASCII | UNIFLG_DIGIT,
	UNIFLG_ASCII | UNIFLG_DIGIT, UNIFLG_ASCII | UNIFLG_DIGIT,
	UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII,
	UNIFLG_ASCII, UNIFLG_ASCII,

	// 0x0040 - 0x004f
	UNIFLG_ASCII, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,

	// 0x0050 - 0x005f
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII | UNIFLG_UPPERCASE,
	UNIFLG_ASCII | UNIFLG_UPPERCASE, UNIFLG_ASCII,
	UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII,

	// 0x0060 - 0x006f
	UNIFLG_ASCII, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,

	// 0x0070 - 0x007f
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII | UNIFLG_LOWERCASE,
	UNIFLG_ASCII | UNIFLG_LOWERCASE, UNIFLG_ASCII,
	UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII, UNIFLG_ASCII | UNIFLG_CONTROL,

	// 0x0080 - 0x008f
	UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL,
	UNIFLG_CONTROL, UNIFLG_CONTROL | UNIFLG_WHITESPACE, UNIFLG_CONTROL, UNIFLG_CONTROL,
	UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL,
	UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL,

	// 0x0090 - 0x009f
	UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL,
	UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL,
	UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL,
	UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL, UNIFLG_CONTROL,

	// 0x00a0 - 0x00af
	UNIFLG_WHITESPACE, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, UNIFLG_LOWERCASE, 0,
	0, 0, 0, 0,

	// 0x00b0 - 0x00bf
	0, 0, 0, 0,
	0, UNIFLG_LOWERCASE, 0, 0,
	0, 0, UNIFLG_LOWERCASE, 0,
	0, 0, 0, 0,

	// 0x00c0 - 0x00cf
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x00d0 - 0x00df
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x00e0 - 0x00ef
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x00f0 - 0x00ff
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE
};



/******************************************************************************/
/* High-byte 0x01 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte01[256] =
{
	// 0x0100 - 0x010f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0110 - 0x011f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0120 - 0x012f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0130 - 0x013f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,

	// 0x0140 - 0x014f
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0150 - 0x015f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0160 - 0x016f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0170 - 0x017f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0180 - 0x018f
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x0190 - 0x019f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,

	// 0x01a0 - 0x01af
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x01b0 - 0x01bf
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x01c0 - 0x01cf
	0, 0, 0, 0,
	UNIFLG_UPPERCASE, 0, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	0, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, 0,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,

	// 0x01d0 - 0x01df
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x01e0 - 0x01ef
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x01f0 - 0x01ff
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, 0, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE
};



/******************************************************************************/
/* High-byte 0x02 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte02[256] =
{
	// 0x0200 - 0x020f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0210 - 0x021f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0220 - 0x022f
	0, 0, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0230 - 0x023f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0240 - 0x024f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0250 - 0x025f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0260 - 0x026f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0270 - 0x027f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0280 - 0x028f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0290 - 0x029f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x02a0 - 0x02af
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0, 0,

	// 0x02b0 - 0x02bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02c0 - 0x02cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02d0 - 0x02df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02e0 - 0x02ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02f0 - 0x02ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x03 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte03[256] =
{
	// 0x0300 - 0x030f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0310 - 0x031f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0320 - 0x032f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0330 - 0x033f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0340 - 0x034f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0350 - 0x035f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0360 - 0x036f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0370 - 0x037f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0380 - 0x038f
	0, 0, 0, 0,
	0, 0, UNIFLG_UPPERCASE, 0,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0,
	UNIFLG_UPPERCASE, 0, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x0390 - 0x039f
	UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x03a0 - 0x03af
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x03b0 - 0x03bf
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x03c0 - 0x03cf
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0,

	// 0x03d0 - 0x03df
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	0, 0, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x03e0 - 0x03ef
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x03f0 - 0x03ff
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x04 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte04[256] =
{
	// 0x0400 - 0x040f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x0410 - 0x041f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x0420 - 0x042f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x0430 - 0x043f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0440 - 0x044f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0450 - 0x045f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0460 - 0x046f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0470 - 0x047f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0480 - 0x048f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x0490 - 0x049f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x04a0 - 0x04af
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x04b0 - 0x04bf
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x04c0 - 0x04cf
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, 0, 0, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, 0, 0, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, 0, 0, 0,

	// 0x04d0 - 0x04df
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x04e0 - 0x04ef
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x04f0 - 0x04ff
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, 0, 0,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x05 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte05[256] =
{
	// 0x0500 - 0x050f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0510 - 0x051f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0520 - 0x052f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0530 - 0x053f
	0, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x0540 - 0x054f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x0550 - 0x055f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0560 - 0x056f
	0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0570 - 0x057f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x0580 - 0x058f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0590 - 0x059f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05a0 - 0x05af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05b0 - 0x05bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05c0 - 0x05cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05d0 - 0x05df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05e0 - 0x05ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05f0 - 0x05ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x06 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte06[256] =
{
	// 0x0600 - 0x060f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0610 - 0x061f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0620 - 0x062f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0630 - 0x063f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0640 - 0x064f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0650 - 0x065f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0660 - 0x066f
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0x0670 - 0x067f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0680 - 0x068f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0690 - 0x069f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x06a0 - 0x06af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x06b0 - 0x06bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x06c0 - 0x06cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x06d0 - 0x06df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x06e0 - 0x06ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x06f0 - 0x06ff
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x09 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte09[256] =
{
	// 0x0900 - 0x090f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0910 - 0x091f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0920 - 0x092f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0930 - 0x093f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0940 - 0x094f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0950 - 0x095f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0960 - 0x096f
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0970 - 0x097f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0980 - 0x098f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0990 - 0x099f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x09a0 - 0x09af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x09b0 - 0x09bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x09c0 - 0x09cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x09d0 - 0x09df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x09e0 - 0x09ef
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x09f0 - 0x09ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x0a flag table                                                  */
/******************************************************************************/
static const uint8 typeByte0A[256] =
{
	// 0x0a00 - 0x0a0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a10 - 0x0a1f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a20 - 0x0a2f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a30 - 0x0a3f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a40 - 0x0a4f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a50 - 0x0a5f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a60 - 0x0a6f
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0a70 - 0x0a7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a80 - 0x0a8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0a90 - 0x0a9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0aa0 - 0x0aaf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ab0 - 0x0abf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ac0 - 0x0acf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ad0 - 0x0adf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ae0 - 0x0aef
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0af0 - 0x0aff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x0b flag table                                                  */
/******************************************************************************/
static const uint8 typeByte0B[256] =
{
	// 0x0b00 - 0x0b0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b10 - 0x0b1f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b20 - 0x0b2f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b30 - 0x0b3f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b40 - 0x0b4f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b50 - 0x0b5f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b60 - 0x0b6f
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0b70 - 0x0b7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b80 - 0x0b8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0b90 - 0x0b9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ba0 - 0x0baf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0bb0 - 0x0bbf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0bc0 - 0x0bcf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0bd0 - 0x0bdf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0be0 - 0x0bef
	0, 0, 0, 0,
	0, 0, 0, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0bf0 - 0x0bff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x0c flag table                                                  */
/******************************************************************************/
static const uint8 typeByte0C[256] =
{
	// 0x0c00 - 0x0c0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c10 - 0x0c1f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c20 - 0x0c2f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c30 - 0x0c3f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c40 - 0x0c4f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c50 - 0x0c5f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c60 - 0x0c6f
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0c70 - 0x0c7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c80 - 0x0c8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0c90 - 0x0c9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ca0 - 0x0caf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0cb0 - 0x0cbf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0cc0 - 0x0ccf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0cd0 - 0x0cdf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ce0 - 0x0cef
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0cf0 - 0x0cff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x0d flag table                                                  */
/******************************************************************************/
static const uint8 typeByte0D[256] =
{
	// 0x0d00 - 0x0d0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d10 - 0x0d1f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d20 - 0x0d2f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d30 - 0x0d3f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d40 - 0x0d4f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d50 - 0x0d5f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d60 - 0x0d6f
	0, 0, 0, 0,
	0, 0, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x0d70 - 0x0d7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d80 - 0x0d8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0d90 - 0x0d9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0da0 - 0x0daf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0db0 - 0x0dbf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0dc0 - 0x0dcf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0dd0 - 0x0ddf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0de0 - 0x0def
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0df0 - 0x0dff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x0e flag table                                                  */
/******************************************************************************/
static const uint8 typeByte0E[256] =
{
	// 0x0e00 - 0x0e0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e10 - 0x0e1f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e20 - 0x0e2f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e30 - 0x0e3f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e40 - 0x0e4f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e50 - 0x0e5f
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0x0e60 - 0x0e6f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e70 - 0x0e7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e80 - 0x0e8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0e90 - 0x0e9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ea0 - 0x0eaf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0eb0 - 0x0ebf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ec0 - 0x0ecf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ed0 - 0x0edf
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0x0ee0 - 0x0eef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ef0 - 0x0eff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x0f flag table                                                  */
/******************************************************************************/
static const uint8 typeByte0F[256] =
{
	// 0x0f00 - 0x0f0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f10 - 0x0f1f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f20 - 0x0f2f
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0x0f30 - 0x0f3f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f40 - 0x0f4f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f50 - 0x0f5f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f60 - 0x0f6f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f70 - 0x0f7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f80 - 0x0f8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0f90 - 0x0f9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0fa0 - 0x0faf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0fb0 - 0x0fbf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0fc0 - 0x0fcf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0fd0 - 0x0fdf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0fe0 - 0x0fef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0ff0 - 0x0fff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x10 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte10[256] =
{
	// 0x1000 - 0x100f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1010 - 0x101f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1020 - 0x102f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1030 - 0x103f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1040 - 0x104f
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0x1050 - 0x105f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1060 - 0x106f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1070 - 0x107f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1080 - 0x108f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1090 - 0x109f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x10a0 - 0x10af
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x10b0 - 0x10bf
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x10c0 - 0x10cf
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x10d0 - 0x10df
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x10e0 - 0x10ef
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x10f0 - 0x10ff
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x13 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte13[256] =
{
	// 0x1300 - 0x130f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1310 - 0x131f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1320 - 0x132f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1330 - 0x133f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1340 - 0x134f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1350 - 0x135f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1360 - 0x136f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,

	// 0x1370 - 0x137f
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1380 - 0x138f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1390 - 0x139f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x13a0 - 0x13af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x13b0 - 0x13bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x13c0 - 0x13cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x13d0 - 0x13df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x13e0 - 0x13ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x13f0 - 0x13ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x16 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte16[256] =
{
	// 0x1600 - 0x160f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1610 - 0x161f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1620 - 0x162f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1630 - 0x163f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1640 - 0x164f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1650 - 0x165f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1660 - 0x166f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1670 - 0x167f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1680 - 0x168f
	UNIFLG_WHITESPACE, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1690 - 0x169f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x16a0 - 0x16af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x16b0 - 0x16bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x16c0 - 0x16cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x16d0 - 0x16df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x16e0 - 0x16ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x16f0 - 0x16ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x17 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte17[256] =
{
	// 0x1700 - 0x170f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1710 - 0x171f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1720 - 0x172f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1730 - 0x173f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1740 - 0x174f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1750 - 0x175f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1760 - 0x176f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1770 - 0x177f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1780 - 0x178f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1790 - 0x179f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x17a0 - 0x17af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x17b0 - 0x17bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x17c0 - 0x17cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x17d0 - 0x17df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x17e0 - 0x17ef
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0x17f0 - 0x17ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x18 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte18[256] =
{
	// 0x1800 - 0x180f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1810 - 0x181f
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0x1820 - 0x182f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1830 - 0x183f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1840 - 0x184f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1850 - 0x185f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1860 - 0x186f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1870 - 0x187f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1880 - 0x188f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x1890 - 0x189f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x18a0 - 0x18af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x18b0 - 0x18bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x18c0 - 0x18cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x18d0 - 0x18df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x18e0 - 0x18ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x18f0 - 0x18ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x1E flag table                                                  */
/******************************************************************************/
static const uint8 typeByte1E[256] =
{
	// 0x1e00 - 0x1e0f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e10 - 0x1e1f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e20 - 0x1e2f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e30 - 0x1e3f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e40 - 0x1e4f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e50 - 0x1e5f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e60 - 0x1e6f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e70 - 0x1e7f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e80 - 0x1e8f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1e90 - 0x1e9f
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	0, 0, 0, 0,

	// 0x1ea0 - 0x1eaf
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1eb0 - 0x1ebf
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1ec0 - 0x1ecf
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1ed0 - 0x1edf
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1ee0 - 0x1eef
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,

	// 0x1ef0 - 0x1eff
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x1F flag table                                                  */
/******************************************************************************/
static const uint8 typeByte1F[256] =
{
	// 0x1f00 - 0x1f0f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x1f10 - 0x1f1f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0, 0,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0, 0,

	// 0x1f20 - 0x1f2f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x1f30 - 0x1f3f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x1f40 - 0x1f4f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0, 0,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0, 0,

	// 0x1f50 - 0x1f5f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	0, UNIFLG_UPPERCASE, 0, UNIFLG_UPPERCASE,
	0, UNIFLG_UPPERCASE, 0, UNIFLG_UPPERCASE,

	// 0x1f60 - 0x1f6f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x1f70 - 0x1f7f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0, 0,

	// 0x1f80 - 0x1f8f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x1f90 - 0x1f9f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x1fa0 - 0x1faf
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x1fb0 - 0x1fbf
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, 0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	0, 0, UNIFLG_LOWERCASE, 0,

	// 0x1fc0 - 0x1fcf
	0, 0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, 0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	0, 0, 0, 0,

	// 0x1fd0 - 0x1fdf
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	0, 0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	0, 0, 0, 0,

	// 0x1fe0 - 0x1fef
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, 0, 0, 0,

	// 0x1ff0 - 0x1fff
	0, 0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, 0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x20 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte20[256] =
{
	// 0x2000 - 0x200f
	UNIFLG_WHITESPACE, UNIFLG_WHITESPACE, UNIFLG_WHITESPACE, UNIFLG_WHITESPACE,
	UNIFLG_WHITESPACE, UNIFLG_WHITESPACE, UNIFLG_WHITESPACE, UNIFLG_WHITESPACE,
	UNIFLG_WHITESPACE, UNIFLG_WHITESPACE, UNIFLG_WHITESPACE, UNIFLG_WHITESPACE,
	0, 0, 0, 0,

	// 0x2010 - 0x201f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2020 - 0x202f
	0, 0, 0, 0,
	0, 0, 0, 0,
	UNIFLG_WHITESPACE, UNIFLG_WHITESPACE, 0, 0,
	0, 0, 0, UNIFLG_WHITESPACE,

	// 0x2030 - 0x203f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2040 - 0x204f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2050 - 0x205f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2060 - 0x206f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2070 - 0x207f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, UNIFLG_LOWERCASE,

	// 0x2080 - 0x208f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2090 - 0x209f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x20a0 - 0x20af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x20b0 - 0x20bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x20c0 - 0x20cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x20d0 - 0x20df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x20e0 - 0x20ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x20f0 - 0x20ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x21 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte21[256] =
{
	// 0x2100 - 0x210f
	0, 0, UNIFLG_UPPERCASE, 0,
	0, 0, 0, UNIFLG_UPPERCASE,
	0, 0, UNIFLG_LOWERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x2110 - 0x211f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_LOWERCASE,
	0, UNIFLG_UPPERCASE, 0, 0,
	0, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0, 0,

	// 0x2120 - 0x212f
	0, 0, 0, 0,
	UNIFLG_UPPERCASE, 0, UNIFLG_UPPERCASE, 0,
	UNIFLG_UPPERCASE, 0, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0, UNIFLG_LOWERCASE,

	// 0x2130 - 0x213f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0, UNIFLG_UPPERCASE,
	UNIFLG_LOWERCASE, 0, 0, 0,
	0, UNIFLG_LOWERCASE, 0, 0,
	0, 0, 0, 0,

	// 0x2140 - 0x214f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2150 - 0x215f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2160 - 0x216f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x2170 - 0x217f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x2180 - 0x218f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2190 - 0x219f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21a0 - 0x21af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21b0 - 0x21bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21c0 - 0x21cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21d0 - 0x21df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21e0 - 0x21ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21f0 - 0x21ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x24 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte24[256] =
{
	// 0x2400 - 0x240f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2410 - 0x241f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2420 - 0x242f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2430 - 0x243f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2440 - 0x244f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2450 - 0x245f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2460 - 0x246f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2470 - 0x247f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2480 - 0x248f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2490 - 0x249f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x24a0 - 0x24af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x24b0 - 0x24bf
	0, 0, 0, 0,
	0, 0, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x24c0 - 0x24cf
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0x24d0 - 0x24df
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0x24e0 - 0x24ef
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0, 0,
	0, 0, 0, 0,

	// 0x24f0 - 0x24ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x30 flag table                                                  */
/******************************************************************************/
static const uint8 typeByte30[256] =
{
	// 0x3000 - 0x300f
	UNIFLG_WHITESPACE, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3010 - 0x301f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3020 - 0x302f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3030 - 0x303f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3040 - 0x304f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3050 - 0x305f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3060 - 0x306f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3070 - 0x307f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3080 - 0x308f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x3090 - 0x309f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x30a0 - 0x30af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x30b0 - 0x30bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x30c0 - 0x30cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x30d0 - 0x30df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x30e0 - 0x30ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x30f0 - 0x30ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0xFB flag table                                                  */
/******************************************************************************/
static const uint8 typeByteFB[256] =
{
	// 0xfb00 - 0xfb0f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb10 - 0xfb1f
	0, 0, 0, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb20 - 0xfb2f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb30 - 0xfb3f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb40 - 0xfb4f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb50 - 0xfb5f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb60 - 0xfb6f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb70 - 0xfb7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb80 - 0xfb8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfb90 - 0xfb9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfba0 - 0xfbaf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfbb0 - 0xfbbf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfbc0 - 0xfbcf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfbd0 - 0xfbdf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfbe0 - 0xfbef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfbf0 - 0xfbff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0xFF flag table                                                  */
/******************************************************************************/
static const uint8 typeByteFF[256] =
{
	// 0xff00 - 0xff0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff10 - 0xff1f
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT, UNIFLG_DIGIT,
	UNIFLG_DIGIT, UNIFLG_DIGIT, 0, 0,
	0, 0, 0, 0,

	// 0xff20 - 0xff2f
	0, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,

	// 0xff30 - 0xff3f
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE,
	UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, UNIFLG_UPPERCASE, 0,
	0, 0, 0, 0,

	// 0xff40 - 0xff4f
	0, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,

	// 0xff50 - 0xff5f
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE,
	UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, UNIFLG_LOWERCASE, 0,
	0, 0, 0, 0,

	// 0xff60 - 0xff6f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff70 - 0xff7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff80 - 0xff8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff90 - 0xff9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffa0 - 0xffaf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffb0 - 0xffbf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffc0 - 0xffcf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffd0 - 0xffdf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffe0 - 0xffef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfff0 - 0xffff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte index table                                                      */
/******************************************************************************/
static const uint8 *typeHighByteIndex[256] =
{
	typeByte00, typeByte01, typeByte02, typeByte03,	typeByte04, typeByte05, typeByte06, NULL,
	NULL, typeByte09, typeByte0A, typeByte0B, typeByte0C, typeByte0D, typeByte0E, typeByte0F,
	typeByte10, NULL, NULL, typeByte13,	NULL, NULL, typeByte16, typeByte17,
	typeByte18, NULL, NULL, NULL, NULL, NULL, typeByte1E, typeByte1F,
	typeByte20, typeByte21, NULL, NULL, typeByte24, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL,	NULL, NULL, NULL, NULL,
	typeByte30, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, typeByteFB, NULL, NULL, NULL, typeByteFF
};



/******************************************************************************/
/*                                                                            */
/* The tables below is used when changing case on a unicode character         */
/*                                                                            */
/******************************************************************************/

/******************************************************************************/
/* High-byte 0x00 case table                                                  */
/******************************************************************************/
static const uint16 caseByte00[256] =
{
	// 0x0000 - 0x000f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0010 - 0x001f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0020 - 0x002f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0030 - 0x003f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0040 - 0x004f
	0, 0x0061, 0x0062, 0x0063,
	0x0064, 0x0065, 0x0066, 0x0067,
	0x0068, 0x0069, 0x006a, 0x006b,
	0x006c, 0x006d, 0x006e, 0x006f,

	// 0x0050 - 0x005f
	0x0070, 0x0071, 0x0072, 0x0073,
	0x0074, 0x0075, 0x0076, 0x0077,
	0x0078, 0x0079, 0x007a, 0,
	0, 0, 0, 0,

	// 0x0060 - 0x006f
	0, 0x0041, 0x0042, 0x0043,
	0x0044, 0x0045, 0x0046, 0x0047,
	0x0048, 0x0049, 0x004a, 0x004b,
	0x004c, 0x004d, 0x004e, 0x004f,

	// 0x0070 - 0x007f
	0x0050, 0x0051, 0x0052, 0x0053,
	0x0054, 0x0055, 0x0056, 0x0057,
	0x0058, 0x0059, 0x005a, 0,
	0, 0, 0, 0,

	// 0x0080 - 0x008f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0090 - 0x009f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x00a0 - 0x00af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x00b0 - 0x00bf
	0, 0, 0, 0,
	0, 0x039c, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x00c0 - 0x00cf
	0x00e0, 0x00e1, 0x00e2, 0x00e3,
	0x00e4, 0x00e5, 0x00e6, 0x00e7,
	0x00e8, 0x00e9, 0x00ea, 0x00eb,
	0x00ec, 0x00ed, 0x00ee, 0x00ef,

	// 0x00d0 - 0x00df
	0x00f0, 0x00f1, 0x00f2, 0x00f3,
	0x00f4, 0x00f5, 0x00f6, 0,
	0x00f8, 0x00f9, 0x00fa, 0x00fb,
	0x00fc, 0x00fd, 0x00fe, 0,

	// 0x00e0 - 0x00ef
	0x00c0, 0x00c1, 0x00c2, 0x00c3,
	0x00c4, 0x00c5, 0x00c6, 0x00c7,
	0x00c8, 0x00c9, 0x00ca, 0x00cb,
	0x00cc, 0x00cd, 0x00ce, 0x00cf,

	// 0x00f0 - 0x00ff
	0x00d0, 0x00d1, 0x00d2, 0x00d3,
	0x00d4, 0x00d5, 0x00d6, 0,
	0x00d8, 0x00d9, 0x00da, 0x00db,
	0x00dc, 0x00dd, 0x00de, 0x0178
};



/******************************************************************************/
/* High-byte 0x01 case table                                                  */
/******************************************************************************/
static const uint16 caseByte01[256] =
{
	// 0x0100 - 0x010f
	0x0101, 0x0100, 0x0103, 0x0102,
	0x0105, 0x0104, 0x0107, 0x0106,
	0x0109, 0x0108, 0x010b, 0x010a,
	0x010d, 0x010c, 0x010f, 0x010e,

	// 0x0110 - 0x011f
	0x0111, 0x0110, 0x0113, 0x0112,
	0x0115, 0x0114, 0x0117, 0x0116,
	0x0119, 0x0118, 0x011b, 0x011a,
	0x011d, 0x011c, 0x011f, 0x011e,

	// 0x0120 - 0x012f
	0x0121, 0x0120, 0x0123, 0x0122,
	0x0125, 0x0124, 0x0127, 0x0126,
	0x0129, 0x0128, 0x012b, 0x012a,
	0x012d, 0x012c, 0x012f, 0x012e,

	// 0x0130 - 0x013f
	0x0069, 0x0049, 0x0133, 0x0132,
	0x0135, 0x0134, 0x0137, 0x0136,
	0, 0x013a, 0x0139, 0x013c,
	0x013b, 0x013e, 0x013d, 0x0140,

	// 0x0140 - 0x014f
	0x013f, 0x0142, 0x0141, 0x0144,
	0x0143, 0x0146, 0x0145, 0x0148,
	0x0147, 0, 0x014b, 0x014a,
	0x014d, 0x014c, 0x014f, 0x014e,

	// 0x0150 - 0x015f
	0x0151, 0x0150, 0x0153, 0x0152,
	0x0155, 0x0154, 0x0157, 0x0156,
	0x0159, 0x0158, 0x015b, 0x015a,
	0x015d, 0x015c, 0x015f, 0x015e,

	// 0x0160 - 0x016f
	0x0161, 0x0160, 0x0163, 0x0162,
	0x0165, 0x0164, 0x0167, 0x0166,
	0x0169, 0x0168, 0x016b, 0x016a,
	0x016d, 0x016c, 0x016f, 0x016e,

	// 0x0170 - 0x017f
	0x0171, 0x0170, 0x0173, 0x0172,
	0x0175, 0x0174, 0x0177, 0x0176,
	0x00ff, 0x017a, 0x0179, 0x017c,
	0x017b, 0x017e, 0x017d, 0x0053,

	// 0x0180 - 0x018f
	0, 0x0253, 0x0183, 0x0182,
	0x0185, 0x0184, 0x0254, 0x0188,
	0x0187, 0x0256, 0x0257, 0x018c,
	0x018b, 0, 0x01dd, 0x0259,

	// 0x0190 - 0x019f
	0x025b, 0x0192, 0x0191, 0x0260,
	0x0263, 0x01f6, 0x0269, 0x0268,
	0x0199, 0x0198, 0, 0,
	0x026f, 0x0272, 0, 0x0275,

	// 0x01a0 - 0x01af
	0x01a1, 0x01a0, 0x01a3, 0x01a2,
	0x01a5, 0x01a4, 0x0280, 0x01a8,
	0x01a7, 0x0283, 0, 0,
	0x01ad, 0x01ac, 0x0288, 0x01b0,

	// 0x01b0 - 0x01bf
	0x01af, 0x028a, 0x028b, 0x01b4,
	0x01b3, 0x01b6, 0x01b5, 0x0292,
	0x01b9, 0x01b8, 0, 0,
	0x01bd, 0x01bc, 0, 0x01f7,

	// 0x01c0 - 0x01cf
	0, 0, 0, 0,
	0x01c6, 0, 0x01c4, 0x01c9,
	0, 0x01c7, 0x01cc, 0,
	0x01ca, 0x01ce, 0x01cd, 0x01d0,

	// 0x01d0 - 0x01df
	0x01cf, 0x01d2, 0x01d1, 0x01d4,
	0x01d3, 0x01d6, 0x01d5, 0x01d8,
	0x01d7, 0x01da, 0x01d9, 0x01dc,
	0x01db, 0x018e, 0x01df, 0x01de,

	// 0x01e0 - 0x01ef
	0x01e1, 0x01e0, 0x01e3, 0x01e2,
	0x01e5, 0x01e4, 0x01e7, 0x01e6,
	0x01e9, 0x01e8, 0x01eb, 0x01ea,
	0x01ed, 0x01ec, 0x01ef, 0x01ee,

	// 0x01f0 - 0x01ff
	0, 0x01f3, 0, 0x01f1,
	0x01f5, 0x01f4, 0x0195, 0x01bf,
	0x01f9, 0x01f8, 0x01fb, 0x01fa,
	0x01fd, 0x01fc, 0x01ff, 0x01fe
};



/******************************************************************************/
/* High-byte 0x02 case table                                                  */
/******************************************************************************/
static const uint16 caseByte02[256] =
{
	// 0x0200 - 0x020f
	0x0201, 0x0200, 0x0203, 0x0202,
	0x0205, 0x0204, 0x0207, 0x0206,
	0x0209, 0x0208, 0x020b, 0x020a,
	0x020d, 0x020c, 0x020f, 0x020e,

	// 0x0210 - 0x021f
	0x0211, 0x0210, 0x0213, 0x0212,
	0x0215, 0x0214, 0x0217, 0x0216,
	0x0219, 0x0218, 0x021b, 0x021a,
	0x021d, 0x021c, 0x021f, 0x021e,

	// 0x0220 - 0x022f
	0, 0, 0x0223, 0x0222,
	0x0225, 0x0224, 0x0227, 0x0226,
	0x0229, 0x0228, 0x022b, 0x022a,
	0x022d, 0x022c, 0x022f, 0x022e,

	// 0x0230 - 0x023f
	0x0231, 0x0230, 0x0233, 0x0232,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0240 - 0x024f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0250 - 0x025f
	0, 0, 0, 0x0181,
	0x0186, 0, 0x0189, 0x018a,
	0, 0x018f, 0, 0x0190,
	0, 0, 0, 0,

	// 0x0260 - 0x026f
	0x0193, 0, 0, 0x0194,
	0, 0, 0, 0,
	0x0197, 0x0196, 0, 0,
	0, 0, 0, 0x019c,

	// 0x0270 - 0x027f
	0, 0, 0x019d, 0,
	0, 0x019f, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0280 - 0x028f
	0x01a6, 0, 0, 0x01a9,
	0, 0, 0, 0,
	0x01ae, 0, 0x01b1, 0x01b2,
	0, 0, 0, 0,

	// 0x0290 - 0x029f
	0, 0, 0x01b7, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02a0 - 0x02af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02b0 - 0x02bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02c0 - 0x02cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02d0 - 0x02df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02e0 - 0x02ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x02f0 - 0x02ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x03 case table                                                  */
/******************************************************************************/
static const uint16 caseByte03[256] =
{
	// 0x0300 - 0x030f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0310 - 0x031f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0320 - 0x032f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0330 - 0x033f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0340 - 0x034f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0350 - 0x035f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0360 - 0x036f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0370 - 0x037f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0380 - 0x038f
	0, 0, 0, 0,
	0, 0, 0x03ac, 0,
	0x03ad, 0x03ae, 0x03af, 0,
	0x03cc, 0, 0x03cd, 0x03ce,

	// 0x0390 - 0x039f
	0, 0x03b1, 0x03b2, 0x03b3,
	0x03b4, 0x03b5, 0x03b6, 0x03b7,
	0x03b8, 0x03b9, 0x03ba, 0x03bb,
	0x03bc, 0x03bd, 0x03be, 0x03bf,

	// 0x03a0 - 0x03af
	0x03c0, 0x03c1, 0, 0x03c3,
	0x03c4, 0x03c5, 0x03c6, 0x03c7,
	0x03c8, 0x03c9, 0x03ca, 0x03cb,
	0x0386, 0x0388, 0x0389, 0x038a,

	// 0x03b0 - 0x03bf
	0, 0x0391, 0x0392, 0x0393,
	0x0394, 0x0395, 0x0396, 0x0397,
	0x0398, 0x0399, 0x039a, 0x039b,
	0x039c, 0x039d, 0x039e, 0x039f,

	// 0x03c0 - 0x03cf
	0x03a0, 0x03a1, 0x03a3, 0x03a3,
	0x03a4, 0x03a5, 0x03a6, 0x03a7,
	0x03a8, 0x03a9, 0x03aa, 0x03ab,
	0x038c, 0x038e, 0x038f, 0,

	// 0x03d0 - 0x03df
	0x0392, 0x0398, 0, 0,
	0, 0x03a6, 0x03a0, 0,
	0, 0, 0x03db, 0x03da,
	0x03dd, 0x03dc, 0x03df, 0x03de,

	// 0x03e0 - 0x03ef
	0x03e1, 0x03e0, 0x03e3, 0x03e2,
	0x03e5, 0x03e4, 0x03e7, 0x03e6,
	0x03e9, 0x03e8, 0x03eb, 0x03ea,
	0x03ed, 0x03ec, 0x03ef, 0x03ee,

	// 0x03f0 - 0x03ff
	0x039a, 0x03a1, 0x03a3, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x04 case table                                                  */
/******************************************************************************/
static const uint16 caseByte04[256] =
{
	// 0x0400 - 0x040f
	0x0450, 0x0451, 0x0452, 0x0453,
	0x0454, 0x0455, 0x0456, 0x0457,
	0x0458, 0x0459, 0x045a, 0x045b,
	0x045c, 0x045d, 0x045e, 0x045f,

	// 0x0410 - 0x041f
	0x0430, 0x0431, 0x0432, 0x0433,
	0x0434, 0x0435, 0x0436, 0x0437,
	0x0438, 0x0439, 0x043a, 0x043b,
	0x043c, 0x043d, 0x043e, 0x043f,

	// 0x0420 - 0x042f
	0x0440, 0x0441, 0x0442, 0x0443,
	0x0444, 0x0445, 0x0446, 0x0447,
	0x0448, 0x0449, 0x044a, 0x044b,
	0x044c, 0x044d, 0x044e, 0x044f,

	// 0x0430 - 0x043f
	0x0410, 0x0411, 0x0412, 0x0413,
	0x0414, 0x0415, 0x0416, 0x0417,
	0x0418, 0x0419, 0x041a, 0x041b,
	0x041c, 0x041d, 0x041e, 0x041f,

	// 0x0440 - 0x044f
	0x0420, 0x0421, 0x0422, 0x0423,
	0x0424, 0x0425, 0x0426, 0x0427,
	0x0428, 0x0429, 0x042a, 0x042b,
	0x042c, 0x042d, 0x042e, 0x042f,

	// 0x0450 - 0x045f
	0x0400, 0x0401, 0x0402, 0x0403,
	0x0404, 0x0405, 0x0406, 0x0407,
	0x0408, 0x0409, 0x040a, 0x040b,
	0x040c, 0x040d, 0x040e, 0x040f,

	// 0x0460 - 0x046f
	0x0461, 0x0460, 0x0463, 0x0462,
	0x0465, 0x0464, 0x0467, 0x0466,
	0x0469, 0x0468, 0x046b, 0x046a,
	0x046d, 0x046c, 0x046f, 0x046e,

	// 0x0470 - 0x047f
	0x0471, 0x0470, 0x0473, 0x0472,
	0x0475, 0x0474, 0x0477, 0x0476,
	0x0479, 0x0478, 0x047b, 0x047a,
	0x047d, 0x047c, 0x047f, 0x047e,

	// 0x0480 - 0x048f
	0x0481, 0x0480, 0, 0,
	0, 0, 0, 0,
	0x048d, 0x048c, 0, 0,
	0, 0, 0x048f, 0x048e,

	// 0x0490 - 0x049f
	0x0491, 0x0490, 0x0493, 0x0492,
	0x0495, 0x0494, 0x0497, 0x0496,
	0x0499, 0x0498, 0x049b, 0x049a,
	0x049d, 0x049c, 0x049f, 0x049e,

	// 0x04a0 - 0x04af
	0x04a1, 0x04a0, 0x04a3, 0x04a2,
	0x04a5, 0x04a4, 0x04a7, 0x04a6,
	0x04a9, 0x04a8, 0x04ab, 0x04aa,
	0x04ad, 0x04ac, 0x04af, 0x04ae,

	// 0x04b0 - 0x04bf
	0x04b1, 0x04b0, 0x04b3, 0x04b2,
	0x04b5, 0x04b4, 0x04b7, 0x04b6,
	0x04b9, 0x04b8, 0x04bb, 0x04ba,
	0x04bd, 0x04bc, 0x04bf, 0x04be,

	// 0x04c0 - 0x04cf
	0, 0x04c2, 0x04c1, 0x04c4,
	0x04c3, 0, 0, 0x04c8,
	0x04c7, 0, 0, 0x04cc,
	0x04cb, 0, 0, 0,

	// 0x04d0 - 0x04df
	0x04d1, 0x04d0, 0x04d3, 0x04d2,
	0x04d5, 0x04d4, 0x04d7, 0x04d6,
	0x04d9, 0x04d8, 0x04db, 0x04da,
	0x04dd, 0x04dc, 0x04df, 0x04de,

	// 0x04e0 - 0x04ef
	0x04e1, 0x04e0, 0x04e3, 0x04e2,
	0x04e5, 0x04e4, 0x04e7, 0x04e6,
	0x04e9, 0x04e8, 0x04eb, 0x04ea,
	0x04ed, 0x04ec, 0x04ef, 0x04ee,

	// 0x04f0 - 0x04ff
	0x04f1, 0x04f0, 0x04f3, 0x04f2,
	0x04f5, 0x04f4, 0, 0,
	0x04f9, 0x04f8, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x05 case table                                                  */
/******************************************************************************/
static const uint16 caseByte05[256] =
{
	// 0x0500 - 0x050f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0510 - 0x051f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0520 - 0x052f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0530 - 0x053f
	0, 0x0561, 0x0562, 0x0563,
	0x0564, 0x0565, 0x0566, 0x0567,
	0x0568, 0x0569, 0x056a, 0x056b,
	0x056c, 0x056d, 0x056e, 0x056f,

	// 0x0540 - 0x054f
	0x0570, 0x0571, 0x0572, 0x0573,
	0x0574, 0x0575, 0x0576, 0x0577,
	0x0578, 0x0579, 0x057a, 0x057b,
	0x057c, 0x057d, 0x057e, 0x057f,

	// 0x0550 - 0x055f
	0x0580, 0x0581, 0x0582, 0x0583,
	0x0584, 0x0585, 0x0586, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0560 - 0x056f
	0, 0x0531, 0x0532, 0x0533,
	0x0534, 0x0535, 0x0536, 0x0537,
	0x0538, 0x0539, 0x053a, 0x053b,
	0x053c, 0x053d, 0x053e, 0x053f,

	// 0x0570 - 0x057f
	0x0540, 0x0541, 0x0542, 0x0543,
	0x0544, 0x0545, 0x0546, 0x0547,
	0x0548, 0x0549, 0x054a, 0x054b,
	0x054c, 0x054d, 0x054e, 0x054f,

	// 0x0580 - 0x058f
	0x0550, 0x0551, 0x0552, 0x0553,
	0x0554, 0x0555, 0x0556, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x0590 - 0x059f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05a0 - 0x05af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05b0 - 0x05bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05c0 - 0x05cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05d0 - 0x05df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05e0 - 0x05ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x05f0 - 0x05ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x1E case table                                                  */
/******************************************************************************/
static const uint16 caseByte1E[256] =
{
	// 0x1e00 - 0x1e0f
	0x1e01, 0x1e00, 0x1e03, 0x1e02,
	0x1e05, 0x1e04, 0x1e07, 0x1e06,
	0x1e09, 0x1e08, 0x1e0b, 0x1e0a,
	0x1e0d, 0x1e0c, 0x1e0f, 0x1e0e,

	// 0x1e10 - 0x1e1f
	0x1e11, 0x1e10, 0x1e13, 0x1e12,
	0x1e15, 0x1e14, 0x1e17, 0x1e16,
	0x1e19, 0x1e18, 0x1e1b, 0x1e1a,
	0x1e1d, 0x1e1c, 0x1e1f, 0x1e1e,

	// 0x1e20 - 0x1e2f
	0x1e21, 0x1e20, 0x1e23, 0x1e22,
	0x1e25, 0x1e24, 0x1e27, 0x1e26,
	0x1e29, 0x1e28, 0x1e2b, 0x1e2a,
	0x1e2d, 0x1e2c, 0x1e2f, 0x1e2e,

	// 0x1e30 - 0x1e3f
	0x1e31, 0x1e30, 0x1e33, 0x1e32,
	0x1e34, 0x1e35, 0x1e37, 0x1e36,
	0x1e39, 0x1e38, 0x1e3b, 0x1e3a,
	0x1e3d, 0x1e3c, 0x1e3f, 0x1e3e,

	// 0x1e40 - 0x1e4f
	0x1e41, 0x1e40, 0x1e43, 0x1e42,
	0x1e45, 0x1e44, 0x1e47, 0x1e46,
	0x1e49, 0x1e48, 0x1e4b, 0x1e4a,
	0x1e4d, 0x1e4c, 0x1e4f, 0x1e4e,

	// 0x1e50 - 0x1e5f
	0x1e51, 0x1e50, 0x1e53, 0x1e52,
	0x1e55, 0x1e54, 0x1e57, 0x1e56,
	0x1e59, 0x1e58, 0x1e5b, 0x1e5a,
	0x1e5d, 0x1e5c, 0x1e5f, 0x1e5e,

	// 0x1e60 - 0x1e6f
	0x1e61, 0x1e60, 0x1e63, 0x1e62,
	0x1e65, 0x1e64, 0x1e67, 0x1e66,
	0x1e69, 0x1e68, 0x1e6b, 0x1e6a,
	0x1e6d, 0x1e6c, 0x1e6f, 0x1e6e,

	// 0x1e70 - 0x1e7f
	0x1e71, 0x1e70, 0x1e73, 0x1e72,
	0x1e75, 0x1e74, 0x1e77, 0x1e76,
	0x1e79, 0x1e78, 0x1e7b, 0x1e7a,
	0x1e7d, 0x1e7c, 0x1e7f, 0x1e7e,

	// 0x1e80 - 0x1e8f
	0x1e81, 0x1e80, 0x1e83, 0x1e82,
	0x1e85, 0x1e84, 0x1e87, 0x1e86,
	0x1e89, 0x1e88, 0x1e8b, 0x1e8a,
	0x1e8d, 0x1e8c, 0x1e8f, 0x1e8e,

	// 0x1e90 - 0x1e9f
	0x1e91, 0x1e90, 0x1e93, 0x1e92,
	0x1e95, 0x1e94, 0, 0,
	0, 0, 0, 0x1e60,
	0, 0, 0, 0,

	// 0x1ea0 - 0x1eaf
	0x1ea1, 0x1ea0, 0x1ea3, 0x1ea2,
	0x1ea5, 0x1ea4, 0x1ea7, 0x1ea6,
	0x1ea9, 0x1ea8, 0x1eab, 0x1eaa,
	0x1ead, 0x1eac, 0x1eaf, 0x1eae,

	// 0x1eb0 - 0x1ebf
	0x1eb1, 0x1eb0, 0x1eb3, 0x1eb2,
	0x1eb5, 0x1eb4, 0x1eb7, 0x1eb6,
	0x1eb9, 0x1eb8, 0x1ebb, 0x1eba,
	0x1ebd, 0x1ebc, 0x1ebf, 0x1ebe,

	// 0x1ec0 - 0x1ecf
	0x1ec1, 0x1ec0, 0x1ec3, 0x1ec2,
	0x1ec5, 0x1ec4, 0x1ec7, 0x1ec6,
	0x1ec9, 0x1ec8, 0x1ecb, 0x1eca,
	0x1ecd, 0x1ecc, 0x1ecf, 0x1ece,

	// 0x1ed0 - 0x1edf
	0x1ed0, 0x1ed1, 0x1ed3, 0x1ed2,
	0x1ed5, 0x1ed4, 0x1ed7, 0x1ed6,
	0x1ed9, 0x1ed8, 0x1edb, 0x1eda,
	0x1edd, 0x1edc, 0x1edf, 0x1ede,

	// 0x1ee0 - 0x1eef
	0x1ee1, 0x1ee0, 0x1ee3, 0x1ee2,
	0x1ee5, 0x1ee4, 0x1ee7, 0x1ee6,
	0x1ee9, 0x1ee8, 0x1eeb, 0x1eea,
	0x1eed, 0x1eec, 0x1eef, 0x1eee,

	// 0x1ef0 - 0x1eff
	0x1ef1, 0x1ef0, 0x1ef3, 0x1ef2,
	0x1ef5, 0x1ef4, 0x1ef7, 0x1ef6,
	0x1ef9, 0x1ef8, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x1F case table                                                  */
/******************************************************************************/
static const uint16 caseByte1F[256] =
{
	// 0x1f00 - 0x1f0f
	0x1f08, 0x1f09, 0x1f0a, 0x1f0b,
	0x1f0c, 0x1f0d, 0x1f0e, 0x1f0f,
	0x1f00, 0x1f01, 0x1f02, 0x1f03,
	0x1f04, 0x1f05, 0x1f06, 0x1f07,

	// 0x1f10 - 0x1f1f
	0x1f18, 0x1f19, 0x1f1a, 0x1f1b,
	0x1f1c, 0x1f1d, 0, 0,
	0x1f10, 0x1f11, 0x1f12, 0x1f13,
	0x1f14, 0x1f15, 0, 0,

	// 0x1f20 - 0x1f2f
	0x1f28, 0x1f29, 0x1f2a, 0x1f2b,
	0x1f2c, 0x1f2d, 0x1f2e, 0x1f2f,
	0x1f20, 0x1f21, 0x1f22, 0x1f23,
	0x1f24, 0x1f25, 0x1f26, 0x1f27,

	// 0x1f30 - 0x1f3f
	0x1f38, 0x1f39, 0x1f3a, 0x1f3b,
	0x1f3c, 0x1f3d, 0x1f3e, 0x1f3f,
	0x1f30, 0x1f31, 0x1f32, 0x1f33,
	0x1f34, 0x1f35, 0x1f36, 0x1f37,

	// 0x1f40 - 0x1f4f
	0x1f48, 0x1f49, 0x1f4a, 0x1f4b,
	0x1f4c, 0x1f4d, 0, 0,
	0x1f40, 0x1f41, 0x1f42, 0x1f43,
	0x1f44, 0x1f45, 0, 0,

	// 0x1f50 - 0x1f5f
	0, 0x1f59, 0, 0x1f5b,
	0, 0x1f5d, 0, 0x1f5f,
	0, 0x1f51, 0, 0x1f53,
	0, 0x1f55, 0, 0x1f57,

	// 0x1f60 - 0x1f6f
	0x1f68, 0x1f69, 0x1f6a, 0x1f6b,
	0x1f6c, 0x1f6d, 0x1f6e, 0x1f6f,
	0x1f60, 0x1f61, 0x1f62, 0x1f63,
	0x1f64, 0x1f65, 0x1f66, 0x1f67,

	// 0x1f70 - 0x1f7f
	0x1fba, 0x1fbb, 0x1fc8, 0x1fc9,
	0x1fca, 0x1fcb, 0x1fda, 0x1fdb,
	0x1ff8, 0x1ff9, 0x1fea, 0x1feb,
	0x1ffa, 0x1ffb, 0, 0,

	// 0x1f80 - 0x1f8f
	0x1f88, 0x1f89, 0x1f8a, 0x1f8b,
	0x1f8c, 0x1f8d, 0x1f8e, 0x1f8f,
	0x1f80, 0x1f81, 0x1f82, 0x1f83,
	0x1f84, 0x1f85, 0x1f86, 0x1f87,

	// 0x1f90 - 0x1f9f
	0x1f98, 0x1f99, 0x1f9a, 0x1f9b,
	0x1f9c, 0x1f9d, 0x1f9e, 0x1f9f,
	0x1f90, 0x1f91, 0x1f92, 0x1f93,
	0x1f94, 0x1f95, 0x1f96, 0x1f97,

	// 0x1fa0 - 0x1faf
	0x1fa8, 0x1fa9, 0x1faa, 0x1fab,
	0x1fac, 0x1fad, 0x1fae, 0x1faf,
	0x1fa0, 0x1fa1, 0x1fa2, 0x1fa3,
	0x1fa4, 0x1fa5, 0x1fa6, 0x1fa7,

	// 0x1fb0 - 0x1fbf
	0x1fb8, 0x1fb9, 0, 0x1fbc,
	0, 0, 0x1f70, 0x1f71,
	0x1fb0, 0x1fb1, 0, 0,
	0x1fb3, 0, 0x0399, 0,

	// 0x1fc0 - 0x1fcf
	0, 0, 0, 0x1fcc,
	0, 0, 0, 0,
	0x1f72, 0x1f73, 0x1f74, 0x1f75,
	0x1fc3, 0, 0, 0,

	// 0x1fd0 - 0x1fdf
	0x1fd8, 0x1fd9, 0, 0,
	0, 0, 0, 0,
	0x1fd0, 0x1fd1, 0x1f76, 0x1f77,
	0, 0, 0, 0,

	// 0x1fe0 - 0x1fef
	0x1fe8, 0x1fe9, 0, 0,
	0, 0x1fec, 0, 0,
	0x1fe0, 0x1fe1, 0x1f7a, 0x1f7b,
	0x1fe5, 0, 0, 0,

	// 0x1ff0 - 0x1fff
	0, 0, 0, 0x1ffc,
	0, 0, 0, 0,
	0x1f78, 0x1f79, 0x1f7c, 0x1f7d,
	0x1ff3, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x21 case table                                                  */
/******************************************************************************/
static const uint16 caseByte21[256] =
{
	// 0x2100 - 0x210f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2110 - 0x211f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2120 - 0x212f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0x006b, 0x00e5,
	0, 0, 0, 0,

	// 0x2130 - 0x213f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2140 - 0x214f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2150 - 0x215f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2160 - 0x216f
	0x2170, 0x2171, 0x2172, 0x2173,
	0x2174, 0x2175, 0x2176, 0x2177,
	0x2178, 0x2179, 0x217a, 0x217b,
	0x217c, 0x217d, 0x217e, 0x217f,

	// 0x2170 - 0x217f
	0x2160, 0x2161, 0x2162, 0x2163,
	0x2164, 0x2165, 0x2166, 0x2167,
	0x2168, 0x2169, 0x216a, 0x216b,
	0x216c, 0x216d, 0x216e, 0x216f,

	// 0x2180 - 0x218f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2190 - 0x219f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21a0 - 0x21af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21b0 - 0x21bf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21c0 - 0x21cf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21d0 - 0x21df
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21e0 - 0x21ef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x21f0 - 0x21ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0x24 case table                                                  */
/******************************************************************************/
static const uint16 caseByte24[256] =
{
	// 0x2400 - 0x240f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2410 - 0x241f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2420 - 0x242f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2430 - 0x243f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2440 - 0x244f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2450 - 0x245f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2460 - 0x246f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2470 - 0x247f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2480 - 0x248f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x2490 - 0x249f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x24a0 - 0x24af
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0x24b0 - 0x24bf
	0, 0, 0, 0,
	0, 0, 0x24d0, 0x24d1,
	0x24d2, 0x24d3, 0x24d4, 0x24d5,
	0x24d6, 0x24d7, 0x24d8, 0x24d9,

	// 0x24c0 - 0x24cf
	0x24da, 0x24db, 0x24dc, 0x24dd,
	0x24de, 0x24df, 0x24e0, 0x24e1,
	0x24e2, 0x24e3, 0x24e4, 0x24e5,
	0x24e6, 0x24e7, 0x24e8, 0x24e9,

	// 0x24d0 - 0x24df
	0x24b6, 0x24b7, 0x24b8, 0x24b9,
	0x24ba, 0x24bb, 0x24bc, 0x24bd,
	0x24be, 0x24bf, 0x24c0, 0x24c1,
	0x24c2, 0x24c3, 0x24c4, 0x24c5,

	// 0x24e0 - 0x24ef
	0x24c6, 0x24c7, 0x24c8, 0x24c9,
	0x24ca, 0x24cb, 0x24cc, 0x24cd,
	0x24ce, 0x24cf, 0, 0,
	0, 0, 0, 0,

	// 0x24f0 - 0x24ff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte 0xFF case table                                                  */
/******************************************************************************/
static const uint16 caseByteFF[256] =
{
	// 0xff00 - 0xff0f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff10 - 0xff1f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff20 - 0xff2f
	0, 0xff41, 0xff42, 0xff43,
	0xff44, 0xff45, 0xff46, 0xff47,
	0xff48, 0xff49, 0xff4a, 0xff4b,
	0xff4c, 0xff4d, 0xff4e, 0xff4f,

	// 0xff30 - 0xff3f
	0xff50, 0xff51, 0xff52, 0xff53,
	0xff54, 0xff55, 0xff56, 0xff57,
	0xff58, 0xff59, 0xff5a, 0,
	0, 0, 0, 0,

	// 0xff40 - 0xff4f
	0, 0xff21, 0xff22, 0xff23,
	0xff24, 0xff25, 0xff26, 0xff27,
	0xff28, 0xff29, 0xff2a, 0xff2b,
	0xff2c, 0xff2d, 0xff2e, 0xff2f,

	// 0xff50 - 0xff5f
	0xff30, 0xff31, 0xff32, 0xff33,
	0xff34, 0xff35, 0xff36, 0xff37,
	0xff38, 0xff39, 0xff3a, 0,
	0, 0, 0, 0,

	// 0xff60 - 0xff6f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff70 - 0xff7f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff80 - 0xff8f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xff90 - 0xff9f
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffa0 - 0xffaf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffb0 - 0xffbf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffc0 - 0xffcf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffd0 - 0xffdf
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xffe0 - 0xffef
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,

	// 0xfff0 - 0xffff
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0
};



/******************************************************************************/
/* High-byte index table                                                      */
/******************************************************************************/
static const uint16 *caseHighByteIndex[256] =
{
	caseByte00, caseByte01, caseByte02, caseByte03, caseByte04, caseByte05, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, caseByte1E, caseByte1F,
	NULL, caseByte21, NULL, NULL, caseByte24, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL,
	NULL, NULL, NULL, NULL, NULL, NULL, NULL, caseByteFF
};

#endif
