/******************************************************************************/
/* SynthSound Interface.                                                      */
/******************************************************************************/
/* This source, or parts thereof, may be used in any software as long the     */
/* license of APlayer is keep. See the LICENSE file for more information.     */
/*                                                                            */
/* Copyright (C) 1998-2002 by The APlayer-Team.                               */
/* All rights reserved.                                                       */
/******************************************************************************/


// PolyKit headers
#include "POS.h"
#include "PList.h"

// Player headers
#include "MEDTypes.h"
#include "OctaMED.h"
#include "Sample.h"
#include "SynthSound.h"


/******************************************************************************/
/* Constructor                                                                */
/******************************************************************************/
SynthSound::SynthSound(OctaMED *octaMED) : Sample(octaMED)
{
}



/******************************************************************************/
/* Destructor                                                                 */
/******************************************************************************/
SynthSound::~SynthSound(void)
{
}



/******************************************************************************/
/* SetVolSpeed()                                                              */
/******************************************************************************/
void SynthSound::SetVolSpeed(uint32 spd)
{
	sy_VolSpeed = spd;
}



/******************************************************************************/
/* SetWFSpeed()                                                               */
/******************************************************************************/
void SynthSound::SetWFSpeed(uint32 spd)
{
	sy_WFSpeed = spd;
}



/******************************************************************************/
/* SetVolTableLen()                                                           */
/******************************************************************************/
void SynthSound::SetVolTableLen(uint32 tbl)
{
	sy_VolTableLen = tbl;
}



/******************************************************************************/
/* SetWFTableLen()                                                            */
/******************************************************************************/
void SynthSound::SetWFTableLen(uint32 tbl)
{
	sy_WFTableLen = tbl;
}



/******************************************************************************/
/* SetVolData()                                                               */
/******************************************************************************/
void SynthSound::SetVolData(uint32 pos, uint8 data)
{
	sy_VolTable[pos] = data;
}



/******************************************************************************/
/* SetWFData()                                                                */
/******************************************************************************/
void SynthSound::SetWFData(uint32 pos, uint8 data)
{
	sy_WFTable[pos] = data;
}



/******************************************************************************/
/* GetVolSpeed()                                                              */
/******************************************************************************/
uint32 SynthSound::GetVolSpeed(void) const
{
	return (sy_VolSpeed);
}



/******************************************************************************/
/* GetWFSpeed()                                                               */
/******************************************************************************/
uint32 SynthSound::GetWFSpeed(void) const
{
	return (sy_WFSpeed);
}



/******************************************************************************/
/* GetVolData()                                                               */
/******************************************************************************/
uint8 SynthSound::GetVolData(uint32 pos) const
{
	return (sy_VolTable[pos]);
}



/******************************************************************************/
/* GetWFData()                                                                */
/******************************************************************************/
uint8 SynthSound::GetWFData(uint32 pos) const
{
	return (sy_WFTable[pos]);
}



/******************************************************************************/
/* IsSynthSound()                                                             */
/******************************************************************************/
bool SynthSound::IsSynthSound(void) const
{
	return (true);
}
